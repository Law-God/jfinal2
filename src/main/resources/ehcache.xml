<ehcache updateCheck="false" name="phantomCache">
	
	 <!--
            maxElementsInMemory 为缓存对象的最大数目, 
            eternal 设置是否永远不过期,
            timeToIdleSeconds 对象处于空闲状态的最多秒数,
            timeToLiveSeconds 对象处于缓存状态的最多秒数 
     -->

   <defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            overflowToDisk="false"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="120"
            />

    <!--

        配置自定义缓存

        maxElementsInMemory：缓存中允许创建的最大对象数
        eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
        timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，
                    两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，
                    如果该值是 0 就意味着元素可以停顿无穷长的时间。
        timeToLiveSeconds：设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，
            如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期。
            当对象过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。
            如果该属性值为0，则表示对象可以无限期地处于空闲状态。
        overflowToDisk：内存不足时，是否启用磁盘缓存。
        memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
        缓存对象清除策略。有三种： 
        1 FIFO ，first in first out ，先进先出
        2 LFU ， Less Frequently Used ，一直以来最少被使用的。缓存的元素有一个hit 属性，hit 值最小的将会被清出缓存。
        3 LRU ，Least Recently Used ，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。
    -->
    <!-- 左侧菜单 -->
    <cache name="itemCacheName"
           maxElementsInMemory="10000"
           eternal="false"
           overflowToDisk="true"
           timeToIdleSeconds="1800"
           timeToLiveSeconds="3600"
           memoryStoreEvictionPolicy="LFU" />

</ehcache>