package ${package};

import com.common.ModelUtils;
import com.generator.upload.UploadService;
import com.jfinal.aop.Before;
import com.jfinal.core.Controller;
import ${modelPackageName}.${className};
import com.common.ReturnMsg;
import org.springframework.util.StringUtils;
import com.model.Upload;
import java.util.List;

/**
 *
 * Controller
 */
@Before(${className}Interceptor.class)
public class ${className}Controller extends Controller {
	
	static ${className}Service service = new ${className}Service();
	static UploadService uploadService = new UploadService();

	public void index() {
		setAttr("${tableName}Page", service.paginate(getParaToInt(0, 1), 10));
		render("${tableName}.html");
	}

	public void list() {
		int page = Integer.valueOf(getPara("page","1"));
		int limit = Integer.valueOf(getPara("limit","10"));
		renderJson(service.paginate(page, limit));
	}

	public void add() {
	}
	
	/**
	 * save 与 update 的业务逻辑在实际应用中也应该放在 serivce 之中，
	 * 并要对数据进正确性进行验证，在此仅为了偷懒
	 */
	@Before(${className}Validator.class)
	public void save() {
		try{
		<#if (columns.fileColumns?size > 0) >
			${className} model = getModel(${className}.class);
        	List<Upload> uploadList = ModelUtils.batchInjectModel(getRequest(),Upload.class,"upload");
            for(Upload upload : uploadList){
            	upload.save();
            	String businessField = upload.getBusinessField();
            	model.set(businessField.toString(),upload.getUploadid());
            }
            model.save();
		<#else>
        	getModel(${className}.class).save();
		</#if>


		}catch (Exception e){
			e.printStackTrace();
			renderJson(new ReturnMsg(false,"系统出错，请联系管理员"));
			return;
		}
		renderJson(new ReturnMsg(true,""));
	}
	
	public void edit() {
		${className} ${tableName} = service.findById(getParaToInt());
	<#if (columns.fileColumns?size > 0) >
		<#list  columns.fileColumns  as  column>
			String upload${column.name}Id = ${tableName}.get("${column.name}");
			if(!StringUtils.isEmpty(upload${column.name}Id)){
				Upload upload${column.name} = uploadService.findById(new Integer(upload${column.name}Id ));
			<#if column.businessType == 'picture'>
				setAttr("uploadPicture", upload${column.name});
			<#elseif column.businessType == 'file'>
				setAttr("uploadFile", upload${column.name});
			</#if>
			}
		</#list>
        setAttr("${tableName}", ${tableName});
	<#else>
        	setAttr("${tableName}", ${tableName});
	</#if>
	}
	
	/**
	 * save 与 update 的业务逻辑在实际应用中也应该放在 serivce 之中，
	 * 并要对数据进正确性进行验证，在此仅为了偷懒
	 */
	@Before(${className}Validator.class)
	public void update() {
		try{
			<#if (columns.fileColumns?size > 0)>
				${className} ${tableName} = getModel(${className}.class);
				<#list columns.fileColumns as column>
				if(StringUtils.isEmpty(${tableName}.get("${column.name}"))){
                    List<Upload> uploadList = ModelUtils.batchInjectModel(getRequest(),Upload.class,"upload");
                    for(Upload upload : uploadList){
						upload.save();
						article.set("${column.name}",upload.getUploadid());
                    }
				}
				</#list>
				${tableName}.update();
			<#else>
            getModel(${className}.class).update();
			</#if>
		}catch (Exception e){
			e.printStackTrace();
			renderJson(new ReturnMsg(false,"系统出错，请联系管理员"));
			return;
		}
		renderJson(new ReturnMsg(true,""));
	}
	
	public void delete() {
		try{
			String idParam = getPara();
			if(!StringUtils.isEmpty(idParam)){
				String[] ids = idParam.split(",");
				for(String id : ids){
					service.deleteById(new Integer(id));
				}
				renderJson(new ReturnMsg(true,""));
			}
			renderJson(new ReturnMsg(false,"操作失败"));
		}catch (Exception e){
			e.printStackTrace();
			renderJson(new ReturnMsg(false,"系统出错，请联系管理员"));
			return;
		}
		renderJson(new ReturnMsg(true,""));
	}
}


